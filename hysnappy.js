/**
 * Uncompress a snappy compressed buffer.
 *
 * @param {Uint8Array} input
 * @param {Uint8Array} output
 */
export async function snappyUncompress(input, output) {
  // Load the WASM module
  const snappyModule = await instantiateWasm()
  // const { memory, uncompress } = snappyModule.instance.exports
  /** @type {WebAssembly.Memory} */
  // @ts-ignore
  // eslint-disable-next-line prefer-destructuring
  const memory = snappyModule.instance.exports.memory
  /** @type {Function} */
  // @ts-ignore
  // eslint-disable-next-line prefer-destructuring
  const uncompress = snappyModule.instance.exports.uncompress

  // WASM memory
  /** @type {WebAssembly.Memory} */
  if (memory.buffer.byteLength < input.byteLength + output.byteLength) {
    // TODO: memory.grow(pagesToGrow)
    throw new Error('memory buffer is too small')
  }

  // Copy the compressed data to WASM memory
  const byteArray = new Uint8Array(memory.buffer)
  byteArray.set(input)

  // Call wasm uncompress function
  const result = uncompress(0, input.byteLength, input.byteLength)

  // Check for errors
  if (result === -1) throw new Error('invalid snappy length header')
  if (result === -2) throw new Error('missing eof marker')
  if (result === -3) throw new Error('premature end of input')
  if (result) throw new Error(`failed to uncompress data ${result}`)

  // Get uncompressed data from WASM memory
  const uncompressed = byteArray.slice(input.byteLength, input.byteLength + output.byteLength)

  // Copy the uncompressed data to the output buffer
  // TODO: Return WASM memory buffer instead of copying?
  output.set(uncompressed)
}

/**
 * Instantiate WASM module from a base64 string.
 *
 * @returns {Promise<WebAssembly.WebAssemblyInstantiatedSource>}
 */
function instantiateWasm() {
  const binaryString = atob(wasm64)
  const byteArray = new Uint8Array(binaryString.length)
  for (let i = 0; i < binaryString.length; i += 1) {
    byteArray[i] = binaryString.charCodeAt(i)
  }
  return WebAssembly.instantiate(byteArray)
}

// Base64 encoded hysnappy.wasm
const wasm64 = ''
